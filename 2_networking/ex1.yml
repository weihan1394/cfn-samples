# Create VPC, IGW, subnet, and route table.
Resources:
  ## VPC
  HmgicsVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 1.1.0.0/16
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"

  ## Subnets
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HmgicsVPC
      AvailabilityZone: us-east-1a
      CidrBlock: 1.1.1.0/24

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HmgicsVPC
      AvailabilityZone: us-east-1a
      CidrBlock: 1.1.2.0/24

  ## Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref HmgicsVPC
      InternetGatewayId: !Ref InternetGateway

  ## Routing
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HmgicsVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref PublicRouteTable

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref PublicRouteTable

  ## NAT GATEWAY
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties:
      SubnetId: !Ref Subnet1
      AllocationId: !GetAtt NatPublicIP.AllocationId

  ## ELASTIC IP
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: HmgicsVPC
    Properties:
      Domain: vpc

  Role1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: Role1

  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: myDummy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"
      Roles:
        - Ref: Role1

  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06b09bfacae1453cb
      InstanceType: t2.micro
      Monitoring: "true"
      DisableApiTermination: "false"
      IamInstanceProfile:
        Ref: InstanceProfile
      SubnetId: !Ref Subnet1
